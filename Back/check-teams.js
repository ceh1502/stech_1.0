const mongoose = require('mongoose');

async function checkTeams() {
  try {
    console.log('üîó MongoDB Atlas Ïó∞Í≤∞ Ï§ë...');
    await mongoose.connect('mongodb+srv://ceh1502:ceh9412@cluster0.97esexh.mongodb.net/stech?retryWrites=true&w=majority&appName=Cluster0');
    console.log('‚úÖ MongoDB Atlas Ïó∞Í≤∞ ÏÑ±Í≥µ\n');

    const playerSchema = new mongoose.Schema({}, { strict: false, collection: 'players' });
    const Player = mongoose.model('Player', playerSchema);

    // JSONÏóêÏÑú ÏÇ¨Ïö©ÌïòÎäî ÌåÄÎ™ÖÎì§
    const jsonTeams = ['HFBlackKnights', 'HYLions'];
    
    console.log('üîç JSON ÌåÄÎ™Ö vs DB ÌåÄÎ™Ö Îß§Ìïë ÌôïÏù∏:');
    
    for (const jsonTeam of jsonTeams) {
      console.log(`\nüìç JSON ÌåÄÎ™Ö: "${jsonTeam}"`);
      
      // Ï†ïÌôïÌûà ÏùºÏπòÌïòÎäî ÌåÄ Ï∞æÍ∏∞
      const exactMatch = await Player.findOne({ teamName: jsonTeam }).lean();
      if (exactMatch) {
        console.log(`‚úÖ Ï†ïÌôï ÏùºÏπò: ${exactMatch.teamName} (${exactMatch.name} ${exactMatch.jerseyNumber}Î≤à)`);
      } else {
        console.log(`‚ùå Ï†ïÌôï ÏùºÏπò ÏóÜÏùå`);
      }
      
      // Ïú†ÏÇ¨Ìïú ÌåÄÎ™Ö Ï∞æÍ∏∞
      const similarTeams = await Player.aggregate([
        { $match: { teamName: { $regex: jsonTeam.slice(0, 2), $options: 'i' } } },
        { $group: { _id: '$teamName', count: { $sum: 1 } } },
        { $sort: { count: -1 } }
      ]);
      
      console.log(`üîç Ïú†ÏÇ¨Ìïú ÌåÄÎ™ÖÎì§:`);
      similarTeams.forEach(team => {
        console.log(`   - ${team._id}: ${team.count}Î™Ö`);
      });
    }

    // QB ÏÑ†ÏàòÎì§Ïùò ÌåÄÎ≥Ñ Î∂ÑÌè¨
    console.log('\nüéØ QB ÏÑ†ÏàòÎì§Ïùò ÌåÄÎ≥Ñ Î∂ÑÌè¨:');
    const qbByTeam = await Player.aggregate([
      { $match: { position: 'QB' } },
      { $group: { _id: '$teamName', count: { $sum: 1 }, players: { $push: { name: '$name', jerseyNumber: '$jerseyNumber' } } } },
      { $sort: { count: -1 } }
    ]);
    
    qbByTeam.forEach(team => {
      console.log(`\nüèà ${team._id}: ${team.count}Î™Ö`);
      team.players.forEach(player => {
        console.log(`   - ${player.jerseyNumber}Î≤à ${player.name}`);
      });
    });

  } catch (error) {
    console.error('‚ùå Ïò§Î•ò:', error.message);
  } finally {
    await mongoose.disconnect();
  }
}

checkTeams();