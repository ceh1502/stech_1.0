import { NestFactory } from '@nestjs/core';
import { AppModule } from '../src/app.module';
import { Model } from 'mongoose';
import { Player, PlayerDocument } from '../src/schemas/player.schema';
import { getModelToken } from '@nestjs/mongoose';

async function fixDuplicatePlayers() {
  const app = await NestFactory.createApplicationContext(AppModule);
  const playerModel = app.get<Model<PlayerDocument>>(getModelToken(Player.name));

  console.log('üîç Ï§ëÎ≥µ ÏÑ†Ïàò Îç∞Ïù¥ÌÑ∞ Í≤ÄÏÇ¨ ÏãúÏûë...');

  // ÌåÄÎ™Ö + Îì±Î≤àÌò∏Í∞Ä Í∞ôÏùÄ ÏÑ†ÏàòÎì§ Ï∞æÍ∏∞
  const duplicates = await playerModel.aggregate([
    {
      $group: {
        _id: { teamName: '$teamName', jerseyNumber: '$jerseyNumber' },
        count: { $sum: 1 },
        docs: { $push: '$$ROOT' }
      }
    },
    {
      $match: { count: { $gt: 1 } }
    }
  ]);

  console.log(`üìä Ï§ëÎ≥µ Í∑∏Î£π ${duplicates.length}Í∞ú Î∞úÍ≤¨`);

  for (const duplicate of duplicates) {
    const { teamName, jerseyNumber } = duplicate._id;
    const docs = duplicate.docs;
    
    console.log(`\nüîç ${teamName} #${jerseyNumber} - ${docs.length}Í∞ú Ï§ëÎ≥µ`);
    
    // Ìè¨ÏßÄÏÖòÎ≥ÑÎ°ú Î∂ÑÎ•ò
    const positionGroups: { [position: string]: any[] } = {};
    docs.forEach(doc => {
      if (!positionGroups[doc.position]) {
        positionGroups[doc.position] = [];
      }
      positionGroups[doc.position].push(doc);
    });

    console.log(`   Ìè¨ÏßÄÏÖò: ${Object.keys(positionGroups).join(', ')}`);

    // K Ìè¨ÏßÄÏÖòÏù¥ ÏûàÏúºÎ©¥ Ïö∞ÏÑ† Ïú†ÏßÄ, ÎÇòÎ®∏ÏßÄÎäî ÏÇ≠Ï†ú
    let keepDoc = null;
    if (positionGroups['K']) {
      keepDoc = positionGroups['K'][0];
      console.log(`   ‚úÖ ÌÇ§Ïª§Î°ú Ïú†ÏßÄ: ${keepDoc.name}`);
    } else {
      // ÌÇ§Ïª§Í∞Ä ÏóÜÏúºÎ©¥ Ï≤´ Î≤àÏß∏ Î¨∏ÏÑú Ïú†ÏßÄ
      keepDoc = docs[0];
      console.log(`   ‚úÖ Ï≤´ Î≤àÏß∏Î°ú Ïú†ÏßÄ: ${keepDoc.name} (${keepDoc.position})`);
    }

    // ÎÇòÎ®∏ÏßÄ Ï§ëÎ≥µ Î¨∏ÏÑúÎì§ ÏÇ≠Ï†ú
    const toDelete = docs.filter(doc => doc._id.toString() !== keepDoc._id.toString());
    
    for (const doc of toDelete) {
      console.log(`   üóëÔ∏è ÏÇ≠Ï†ú: ${doc.name} (${doc.position})`);
      await playerModel.deleteOne({ _id: doc._id });
    }
  }

  console.log('\n‚úÖ Ï§ëÎ≥µ ÏÑ†Ïàò Ï†ïÎ¶¨ ÏôÑÎ£å');
  await app.close();
}

if (require.main === module) {
  fixDuplicatePlayers().catch(console.error);
}